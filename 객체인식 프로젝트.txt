# iotParking

2023-12-03
 1) 교수님이 제공하신 객체 인식 자료
 ○ 객체 인식이 적용되는 것이 확인, 영상을 실행시켜 본 결과 특정 객체(트럭, SUV등)를 인식 못함 하지만 아파트 주차장이라는 환경의 특성상 트럭이 주차하지 않는다고 가정함. (참고자료: GitHub - jitendrasb24/Car-Detection-OpenCV: Detection of Cars from Video, Photo and Real Time) -> 사진을 객체 인식을 실행해서 확인한 점: 객체가 너무 멀거나 너무 가까우면 사진에서 인식을 못하는 문제(코랩에서 실행시)
 ○ cars_counter.py를 수정하여 칸마다 차가 진입하는지 확인하여 A-1 A-2 등 일련번호를 칸마다 부여가 필요
 ○ 차량 객체 인식이 근접에서 작동하냐의 문제점 객체 인식이 일정한 거리에서 촬영했을때 만약 CCTV에서 가까운곳에 적용된 곳은 객체인식이 정상적으로 작동하는지 테스트 필요 

 2) 인터넷 검색을 통해 찾은 자료
 ○ YOLO를 이용한 프로그램
 - 운영체제에서의 문제가 있음 MacOS나 리눅스 환경에서 돌아감.
 ○ opencv를 이용한 프로그램
 - 교수님이 주신 프로그램보다 깔끔하게 만든 프로그램을 찾지 못함.


 3. 사용한 프로그램
 3-1) 코랩(colab),VisualStudioCode
 ○ 공유의 편의성 라이브러리를 기본으로 제공하여 Opencv의 사용을 편하게 해줌
 ○ microsoft가 제공하는 확장성이 높은 코드 편집기 

 3-2) 예제 코드 실행
 ○ 코랩 코드 실행시 프레임 별로 잘라서 객체인식이 적용된 사진 처럼 나옴 반면 다른 편집기인 vsc에서는 
 객체인식이 적용된 동영상으로 출력됨 

 ○ vsc에서 car_detection.py 실행 시 동영상 속도가 기본 동영상보다 느려짐
 또한 cars_counter.py 파일 실행 시 기존 동영상 속도보다 매우 빨라짐
 따라 추후 실시간 영상으로 대체 후 실행 시 이슈 발생 가능성이 존재함
 
 ※ 코랩 사용시 수정해야 하는 코드
 ○ 기본적으로 주피터 노트북을 사용하기 때문에 아래 링크의 방법으로 수정함
 링크의 내용은 from google.colab.patches  import cv2_imshow 라는 라이브러리 부분에
 추가하고 cv2.imshow 라는 객체 인식한 영상 사진 등을 추가하는 부분을 cv2_imshow라고 수정이 필요하다.
 (참고 자료: https://overface.tistory.com/573)
  링크의 내용은 from google.colab.patches  import cv2_imshow 라는 라이브러리 부분 에 추가하고 cv2.imshow 라는 객체 인식한 영상 사진등을 추가하는 부분을 cv2_imshow라고 수정이 필요하다. (참고자료: https://overface.tistory.com/573)

 3-3) 바운딩 박스 좌표 
 ○ 바운딩 박스는 객체 인식시 네모난 박스를 통하여 객체를 표시하는 것
 ○ 좌표를 표시하여 주차장이라는 공간이 있으면 예시로 (x,y,x축크기,y축크기)가 있을때 주차장의 x축과 y축의 기준을 잡고 크기를 조정하여 A-1, A-2, A-3, A-4 라는 각각의 바운딩 박스의 좌표를 표시할 수 있다. (참고자료: https://leedakyeong.tistory.com/entry/Python-albumentations-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-Image-Agumentation)

4. 개발 구성도 
 ○ 첫번쨰 안: 차량 숫자 세는 파이썬 코드를 수정하여 분류한 일련번호에 각각에 차가 들어가는지 숫자 카운트 하기 카운트한 숫자와 객체 인식한 차량을 이용하여 주차장 공간에 객체 인식이 진행 된다는걸 확인한다.
 ○ 두번쨰 안: 차량 주차공간에 바운딩 박스를 만들어 객체가 감지 됬을때 색이 바뀌도록 한다.
